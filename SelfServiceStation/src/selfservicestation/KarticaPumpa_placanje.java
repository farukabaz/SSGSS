/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package selfservicestation;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;

/**
 *
 * @author PC
 */
public class KarticaPumpa_placanje extends javax.swing.JFrame {

    /**
     * Creates new form KarticaPumpaPlacanje
     */
    public KarticaPumpa_placanje() {
        initComponents();
    }

    public KarticaPumpa_placanje(String KojeGorivo, String KolicinaNovca, String KolicinaGorivaPopust){
        initComponents();
      
        izabranoGorivo_kp.setText(KojeGorivo);
        PumpaKarticaKolicinaNovca.setText(KolicinaNovca);
        kolicinaGoriva_kp.setText(KolicinaGorivaPopust);
         
    }
    
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    
     int gasStationCardID1 = 1;
    int gasStationCardPin1 = 1111;
    double gasStationCardBalance1 = 300.3;
    
    
    int gasStationCardID2 = 2;
    int gasStationCardPin2 = 2222;
    double gasStationCardBalance2 = 300.3;
    
    int gasStationCardID3 = 3;
    int gasStationCardPin3 = 3333;
    double gasStationCardBalance3 = 300.3;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PumpaKarticaID = new javax.swing.JTextField();
        PumpaKarticaPIN = new javax.swing.JTextField();
        PumpaKarticaKolicinaNovca = new javax.swing.JLabel();
        button_potvrdiUplatu_KP = new javax.swing.JButton();
        button_nazad_KP = new javax.swing.JButton();
        izabranoGorivo_kp = new javax.swing.JLabel();
        kolicinaGoriva_kp = new javax.swing.JLabel();
        ukupnoUplaceno_kp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 0, 153));

        jLabel5.setBackground(new java.awt.Color(153, 153, 153));
        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("selected payment type - gas station card");
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jLabel7.setBackground(new java.awt.Color(153, 153, 153));
        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("gas station card ID :");

        jLabel6.setBackground(new java.awt.Color(153, 153, 153));
        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("gas station card PIN :");

        jLabel8.setBackground(new java.awt.Color(153, 153, 153));
        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("desired ammount :");

        PumpaKarticaID.setBackground(new java.awt.Color(204, 204, 204));
        PumpaKarticaID.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 11)); // NOI18N
        PumpaKarticaID.setForeground(new java.awt.Color(0, 0, 0));
        PumpaKarticaID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PumpaKarticaID.setText("input your card ID here : ");
        PumpaKarticaID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        PumpaKarticaID.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        PumpaKarticaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PumpaKarticaIDActionPerformed(evt);
            }
        });
        PumpaKarticaID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PumpaKarticaIDKeyTyped(evt);
            }
        });

        PumpaKarticaPIN.setBackground(new java.awt.Color(204, 204, 204));
        PumpaKarticaPIN.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 11)); // NOI18N
        PumpaKarticaPIN.setForeground(new java.awt.Color(0, 0, 0));
        PumpaKarticaPIN.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PumpaKarticaPIN.setText("input your card PIN here :");
        PumpaKarticaPIN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        PumpaKarticaPIN.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        PumpaKarticaPIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PumpaKarticaPINActionPerformed(evt);
            }
        });
        PumpaKarticaPIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PumpaKarticaPINKeyTyped(evt);
            }
        });

        PumpaKarticaKolicinaNovca.setBackground(new java.awt.Color(153, 153, 153));
        PumpaKarticaKolicinaNovca.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        PumpaKarticaKolicinaNovca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PumpaKarticaKolicinaNovca.setText("KolicinaNovca");

        button_potvrdiUplatu_KP.setBackground(new java.awt.Color(153, 153, 153));
        button_potvrdiUplatu_KP.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        button_potvrdiUplatu_KP.setForeground(new java.awt.Color(153, 0, 153));
        button_potvrdiUplatu_KP.setText("confirm");
        button_potvrdiUplatu_KP.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        button_potvrdiUplatu_KP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_potvrdiUplatu_KPActionPerformed(evt);
            }
        });

        button_nazad_KP.setBackground(new java.awt.Color(153, 153, 153));
        button_nazad_KP.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        button_nazad_KP.setForeground(new java.awt.Color(153, 0, 153));
        button_nazad_KP.setText("back");
        button_nazad_KP.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        button_nazad_KP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_nazad_KPActionPerformed(evt);
            }
        });

        izabranoGorivo_kp.setForeground(new java.awt.Color(153, 0, 153));
        izabranoGorivo_kp.setText("izabranoGorivo_kp");

        kolicinaGoriva_kp.setForeground(new java.awt.Color(153, 0, 153));
        kolicinaGoriva_kp.setText("kolicinaGoriva_kp");

        ukupnoUplaceno_kp.setForeground(new java.awt.Color(153, 0, 153));
        ukupnoUplaceno_kp.setText("ukupnoUplaceno_kp");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)
                                .addComponent(PumpaKarticaPIN, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)
                                .addComponent(PumpaKarticaID, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)
                                .addComponent(PumpaKarticaKolicinaNovca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(132, 132, 132))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(button_potvrdiUplatu_KP, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(izabranoGorivo_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(kolicinaGoriva_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ukupnoUplaceno_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_nazad_KP, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PumpaKarticaID, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PumpaKarticaPIN, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(PumpaKarticaKolicinaNovca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_potvrdiUplatu_KP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_nazad_KP, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(izabranoGorivo_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kolicinaGoriva_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ukupnoUplaceno_kp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PumpaKarticaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PumpaKarticaIDActionPerformed
        
    }//GEN-LAST:event_PumpaKarticaIDActionPerformed

    private void PumpaKarticaIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PumpaKarticaIDKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_PumpaKarticaIDKeyTyped

    private void PumpaKarticaPINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PumpaKarticaPINActionPerformed

    }//GEN-LAST:event_PumpaKarticaPINActionPerformed

    private void PumpaKarticaPINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PumpaKarticaPINKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            evt.consume();
        }
    }//GEN-LAST:event_PumpaKarticaPINKeyTyped

    private void button_potvrdiUplatu_KPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_potvrdiUplatu_KPActionPerformed

        int PumpaKarticaId = Integer.parseInt(PumpaKarticaID.getText());
        int PumpaKarticaPin = Integer.parseInt(PumpaKarticaPIN.getText());

        int PumpaKarticaKolicinaNovac = Integer.parseInt(PumpaKarticaKolicinaNovca.getText());
        double KolicinaGorivaPopust = Double.parseDouble(kolicinaGoriva_kp.getText());
        String KojeGorivo = izabranoGorivo_kp.getText();

        int Uplaceno_kp = (PumpaKarticaKolicinaNovac);
        final int kusur = 0;

        if((PumpaKarticaId==gasStationCardID1) && (PumpaKarticaPin==gasStationCardPin1)){
            System.out.println("Obrada u toku;");
            if(PumpaKarticaKolicinaNovac<=gasStationCardBalance1){

                System.out.println("Transakcija uspjesna. " + "Molimo sacekajte vas racun. ");

                String msg2 = String.valueOf(Uplaceno_kp);
                String msg1 = String.valueOf(PumpaKarticaKolicinaNovac);
                String msg3 = String.valueOf(kusur);
                String msg4 = String.valueOf(KolicinaGorivaPopust);
                String msg5 = String.valueOf(KojeGorivo);

                //String msg3 = String.valueOf(rand);
                new Racun(msg2,msg1,msg3,msg4,msg5).setVisible(true);

                close();
                //new Racun().setVisible(true);

            }

            else
            System.out.println("Nemate dovoljno sredstava na racunu.");
        }

        else if((PumpaKarticaId==gasStationCardID2) && (PumpaKarticaPin==gasStationCardPin2)){
            System.out.println("Obrada u toku;");
            if(PumpaKarticaKolicinaNovac>=gasStationCardBalance2){

                Uplaceno_kp = (PumpaKarticaKolicinaNovac);
                System.out.println("Transakcija uspjesna. " + "Molimo sacekajte vas racun. ");

                String msg2 = String.valueOf(Uplaceno_kp);
                String msg1 = String.valueOf(PumpaKarticaKolicinaNovac);
                String msg3 = String.valueOf(kusur);
                String msg4 = String.valueOf(KolicinaGorivaPopust);
                String msg5 = String.valueOf(KojeGorivo);

                //String msg3 = String.valueOf(rand);
                new Racun(msg2,msg1,msg3,msg4,msg5).setVisible(true);

                close();
                //new Racun().setVisible(true);

            }

            else
            System.out.println("Nemate dovoljno sredstava na racunu.");
        }
        else if((PumpaKarticaId==gasStationCardID3) && (PumpaKarticaPin==gasStationCardPin3)){
            System.out.println("Obrada u toku;");
            if(PumpaKarticaKolicinaNovac>=gasStationCardBalance3){

                Uplaceno_kp = (PumpaKarticaKolicinaNovac);
                System.out.println("Transakcija uspjesna. " + "Molimo sacekajte vas racun. ");

                String msg2 = String.valueOf(Uplaceno_kp);
                String msg1 = String.valueOf(PumpaKarticaKolicinaNovac);
                String msg3 = String.valueOf(kusur);
                String msg4 = String.valueOf(KolicinaGorivaPopust);
                String msg5 = String.valueOf(KojeGorivo);

                //String msg3 = String.valueOf(rand);
                new Racun(msg2,msg1,msg3,msg4,msg5).setVisible(true);

                close();
                //new Racun().setVisible(true);

            }

            else
            System.out.println("Nemate dovoljno sredstava na racunu.");
        }

        else
        System.out.println("Uneseni podatci nisu tacni.");

        }

        /*if(((PumpaKarticaId==gasStationCardID1) && (PumpaKarticaPin==gasStationCardPin1)) || ((PumpaKarticaId==gasStationCardID2)&&(PumpaKarticaPin==gasStationCardPin2))||(PumpaKarticaId==gasStationCardID3)&&(PumpaKarticaPin==gasStationCardPin3)){
            System.out.println("Obrada u toku;");
            if(PumpaKarticaKolicinaNovac>=gasStationCardBalance){

                final int kusur = 0;
                int UkupnoUplaceno_kp = Integer.parseInt(PumpaKarticaKolicinaNovca.getText());

                System.out.println("Transakcija uspjesna. " + "Molimo sacekajte vas racun. ");

                String msg1 = String.valueOf(KojeGorivo);
                String msg2 = String.valueOf(KolicinaGoriva);
                String msg3 = String.valueOf(PumpaKarticaKolicinaNovac);
                String msg4 = String.valueOf(UkupnoUplaceno_kp);
                String msg5 = String.valueOf(kusur);

                //String msg3 = String.valueOf(rand);
                new Racun(msg1,msg2,msg3,msg4,msg5).setVisible(true);

                close();
                //new Racun().setVisible(true);

            }

            else
            System.out.println("Nemate dovoljno sredstava na racunu.");
        }
        else
        System.out.println("Uneseni podatci nisu tacni.");

    }//GEN-LAST:event_button_potvrdiUplatu_KPActionPerformed
*/
    private void button_nazad_KPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_nazad_KPActionPerformed
        close();
        PaymentSelection ps = new PaymentSelection();
        ps.setVisible(true);
    }//GEN-LAST:event_button_nazad_KPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KarticaPumpa_placanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KarticaPumpa_placanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KarticaPumpa_placanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KarticaPumpa_placanje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KarticaPumpa_placanje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PumpaKarticaID;
    private javax.swing.JLabel PumpaKarticaKolicinaNovca;
    private javax.swing.JTextField PumpaKarticaPIN;
    private javax.swing.JButton button_nazad_KP;
    private javax.swing.JButton button_potvrdiUplatu_KP;
    private javax.swing.JLabel izabranoGorivo_kp;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel kolicinaGoriva_kp;
    private javax.swing.JLabel ukupnoUplaceno_kp;
    // End of variables declaration//GEN-END:variables
}
